"""Module used to test dota_wiki_parser module methods."""

import unittest
import json

from responses_wiki import dota_wiki_parser as parser

__author__ = 'Jonarzz'


class AccountTest(unittest.TestCase):
    """Class used to test dota_wiki_parser module.
    Inherits from TestCase class of unittest module."""

    def test_pages_to_parse(self):
        """Method testing pages_to_parse method from dota_wiki_parser module.

        The method checks if the requested response is consists of JSON payload as expected.
        """

        url = parser.URL_BEGINNING + parser.URL_API + parser.CATEGORY
        parsed_json = json.loads(parser.page_to_parse(url))

        self.assertIsNotNone(parsed_json)
        categorymembers = parsed_json["query"]["categorymembers"]
        self.assertNotEqual(categorymembers, [])
        self.assertTrue(len(categorymembers) > 150)
        self.assertEqual(categorymembers[0]['title'], 'Abaddon/Responses')
        self.assertEqual(categorymembers[-1]['title'], 'Zeus/Responses')

    def test_pages_for_category(self):
        """Method testing pages_for_category method from dota_wiki_parser module.

        The method checks if the list generated by the method is not empty.
        """
        self.assertNotEqual(parser.pages_for_category(parser.CATEGORY), [])

    def test_clean_key(self):
        """Method testing clean_key method from dota_wiki_parser module.

        Please, check help for clean_key method for further information about the expected results.
        """
        self.assertEqual(parser.clean_key(' Earthshaker! <i>test</i>(test2)'), 'earthshaker')

    def test_value_from_element(self):
        """Method testing value_from_element method from dota_wiki_parser module.

        The module is testing if the method extracts a proper url from the given html element.
        """
        url = '<li> <a href="http://a.a" title="Play" class="sm2">Play</a> Earthshaker! </li>'
        self.assertEqual(parser.value_from_element(url), 'http://a.a')

    def test_short_hero_name_from_url(self):
        """Method testing short_hero_name_from_url method from dota_wiki_parser module."""
        self.assertEqual(parser.short_hero_name_from_url('/Test_asdf.mp3'), 'Test')
        self.assertEqual(parser.short_hero_name_from_url('/Dlc_Test_asdf.mp3'), 'Dlc_Test')
        self.assertEqual(parser.short_hero_name_from_url('/Dlc_tech_ann_asdf.mp3'), 'Dlc_tech_ann')
